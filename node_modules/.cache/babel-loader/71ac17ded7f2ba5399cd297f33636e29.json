{"ast":null,"code":"module.exports = function (point, vs) {\n  // ray-casting algorithm based on\n  // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n  var x = point[0],\n      y = point[1];\n  var inside = false;\n\n  for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n    var xi = vs[i][0],\n        yi = vs[i][1];\n    var xj = vs[j][0],\n        yj = vs[j][1];\n    var intersect = yi > y != yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n    if (intersect) inside = !inside;\n  }\n\n  return inside;\n};","map":{"version":3,"sources":["/Users/ytaek.kim/dev/snc_vis/node_modules/point-in-polygon/index.js"],"names":["module","exports","point","vs","x","y","inside","i","j","length","xi","yi","xj","yj","intersect"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiBC,EAAjB,EAAqB;AAClC;AACA;AAEA,MAAIC,CAAC,GAAGF,KAAK,CAAC,CAAD,CAAb;AAAA,MAAkBG,CAAC,GAAGH,KAAK,CAAC,CAAD,CAA3B;AAEA,MAAII,MAAM,GAAG,KAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGL,EAAE,CAACM,MAAH,GAAY,CAAhC,EAAmCF,CAAC,GAAGJ,EAAE,CAACM,MAA1C,EAAkDD,CAAC,GAAGD,CAAC,EAAvD,EAA2D;AACvD,QAAIG,EAAE,GAAGP,EAAE,CAACI,CAAD,CAAF,CAAM,CAAN,CAAT;AAAA,QAAmBI,EAAE,GAAGR,EAAE,CAACI,CAAD,CAAF,CAAM,CAAN,CAAxB;AACA,QAAIK,EAAE,GAAGT,EAAE,CAACK,CAAD,CAAF,CAAM,CAAN,CAAT;AAAA,QAAmBK,EAAE,GAAGV,EAAE,CAACK,CAAD,CAAF,CAAM,CAAN,CAAxB;AAEA,QAAIM,SAAS,GAAKH,EAAE,GAAGN,CAAN,IAAaQ,EAAE,GAAGR,CAAnB,IACRD,CAAC,GAAG,CAACQ,EAAE,GAAGF,EAAN,KAAaL,CAAC,GAAGM,EAAjB,KAAwBE,EAAE,GAAGF,EAA7B,IAAmCD,EAD/C;AAEA,QAAII,SAAJ,EAAeR,MAAM,GAAG,CAACA,MAAV;AAClB;;AAED,SAAOA,MAAP;AACH,CAjBD","sourcesContent":["module.exports = function (point, vs) {\n    // ray-casting algorithm based on\n    // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n    \n    var x = point[0], y = point[1];\n    \n    var inside = false;\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n        var xi = vs[i][0], yi = vs[i][1];\n        var xj = vs[j][0], yj = vs[j][1];\n        \n        var intersect = ((yi > y) != (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    \n    return inside;\n};\n"]},"metadata":{},"sourceType":"script"}