{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ytaek.kim/dev/snc_vis/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport Checkviz from './components/Checkviz';\nimport Explorer from './components/Explorer';\nimport Select from '@material-ui/core/Select';\n\nconst App = props => {\n  _s();\n\n  // defaults\n  let datasetList = [\"mnist_sampled_2\", \"fmnist_sampled_2\", \"kmnist_sampled_2\"];\n  let methodList = [\"tsne\", \"umap\", \"pca\", \"isomap\"];\n  let displayModeList = [[\"CheckCluster Only\", \"cc\"], [\"CheckViz Only\", \"cv\"], [\"Both\", \"bh\"]]; // let method = \"tsne\";\n  // let dataset = \"mnist_sampled_2\";\n\n  const isLabel = true;\n  const showMissing = true;\n  const showFalse = true;\n  const radius = 2;\n  const stroke = 5;\n  const width = 700;\n  const height = 700;\n  const [method, setMethod] = useState(methodList[0]);\n  const [dataset, setDataset] = useState(datasetList[0]);\n  const [displayMode, setDisplayMode] = useState(displayModeList[0][1]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"App-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"App-title\",\n        children: \"CheckCluster - Explaining the Cluster Reliability of Multidimensional Projections\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"dataset:\", /*#__PURE__*/_jsxDEV(Select, {\n            id: \"datasetSelection\",\n            value: dataset,\n            onChange: event => setDataset(event.target.value),\n            style: {\n              width: \"90px\",\n              fontSize: \"12px\"\n            },\n            native: true,\n            children: datasetList.map((d, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: d,\n              children: d\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"method:\", /*#__PURE__*/_jsxDEV(Select, {\n            id: \"methodSelection\",\n            value: method,\n            onChange: event => setMethod(event.target.value),\n            style: {\n              width: \"90px\",\n              fontSize: \"12px\"\n            },\n            native: true,\n            children: methodList.map((d, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: d,\n              children: d\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Visualization:\", /*#__PURE__*/_jsxDEV(Select, {\n            id: \"displayModeSelection\",\n            value: displayMode,\n            onChange: event => setDisplayMode(event.target.value),\n            style: {\n              width: \"90px\",\n              fontSize: \"12px\"\n            },\n            native: true,\n            children: displayModeList.map((d, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: d[1],\n              children: d[0]\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"cc\" // style={{\n          //   display: ([\"cc\", \"both\"].indexOf(displayMode) > -1 ? \"\" : \"none\")\n          // }}\n          ,\n          children: [\"cc\", \"bh\"].indexOf(displayMode) > -1 && /*#__PURE__*/_jsxDEV(Explorer, {\n            method: method,\n            dataset: dataset,\n            isLabel: isLabel,\n            showMissing: showMissing,\n            showFalse: showFalse,\n            radius: radius,\n            stroke: stroke,\n            width: width,\n            height: height\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"cv\",\n          children: [\"cv\", \"bh\"].indexOf(displayMode) > -1 && /*#__PURE__*/_jsxDEV(Checkviz, {\n            method: method,\n            dataset: dataset,\n            isLabel: isLabel,\n            radius: radius,\n            width: width,\n            height: height\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"vRUoxci55HdfZIWwCtB/mp7jPxs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ytaek.kim/dev/snc_vis/src/App.js"],"names":["React","useState","Checkviz","Explorer","Select","App","props","datasetList","methodList","displayModeList","isLabel","showMissing","showFalse","radius","stroke","width","height","method","setMethod","dataset","setDataset","displayMode","setDisplayMode","event","target","value","fontSize","map","d","i","indexOf"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport React, { useState } from 'react';\r\n\r\nimport Checkviz from './components/Checkviz';\r\nimport Explorer from './components/Explorer';\r\n\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst App = (props) => {\r\n  // defaults\r\n  let datasetList = [\r\n    \"mnist_sampled_2\",\r\n    \"fmnist_sampled_2\",\r\n    \"kmnist_sampled_2\"\r\n  ];\r\n\r\n  let methodList = [\r\n    \"tsne\",\r\n    \"umap\",\r\n    \"pca\",\r\n    \"isomap\",\r\n  ];\r\n\r\n  let displayModeList = [\r\n    [\"CheckCluster Only\", \"cc\"],\r\n    [\"CheckViz Only\", \"cv\"],\r\n    [\"Both\", \"bh\"],\r\n  ]\r\n\r\n  // let method = \"tsne\";\r\n  // let dataset = \"mnist_sampled_2\";\r\n  const isLabel = true;\r\n  const showMissing = true;\r\n  const showFalse = true;\r\n  const radius = 2;\r\n  const stroke = 5;\r\n  const width = 700;\r\n  const height = 700;\r\n\r\n\r\n  const [method, setMethod] = useState(methodList[0]);\r\n  const [dataset, setDataset] = useState(datasetList[0]);\r\n  const [displayMode, setDisplayMode] = useState(displayModeList[0][1]);\r\n\r\n  return (\r\n    <div id=\"App-wrapper\">\r\n      <div id=\"App-header\">\r\n        <div id=\"App-title\">CheckCluster - Explaining the Cluster Reliability of Multidimensional Projections</div>\r\n      </div>\r\n      <div className=\"App-container\">\r\n        <div className=\"App-sidebar\">\r\n          <div>\r\n            dataset: \r\n            <Select\r\n              id={\"datasetSelection\"}\r\n              value={dataset}\r\n              onChange={(event) => setDataset(event.target.value)}\r\n              style={{ width: \"90px\", fontSize: \"12px\" }}\r\n              native\r\n            >\r\n              {datasetList.map((d, i) => (\r\n                <option key={i} value={d} >\r\n                  {d}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n\r\n          <div>\r\n            method: \r\n            <Select\r\n              id={\"methodSelection\"}\r\n              value={method}\r\n              onChange={(event) => setMethod(event.target.value)}\r\n              style={{ width: \"90px\", fontSize: \"12px\" }}\r\n              native\r\n            >\r\n              {methodList.map((d, i) => (\r\n                <option key={i} value={d} >\r\n                  {d}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n\r\n          <div>\r\n            Visualization: \r\n            <Select\r\n              id={\"displayModeSelection\"}\r\n              value={displayMode}\r\n              onChange={(event) => setDisplayMode(event.target.value)}\r\n              style={{ width: \"90px\", fontSize: \"12px\" }}\r\n              native\r\n            >\r\n              {displayModeList.map((d, i) => (\r\n                <option key={i} value={d[1]} >\r\n                  {d[0]}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n          \r\n        </div>\r\n        <div className=\"App-main\">\r\n          <div \r\n            id=\"cc\"\r\n            // style={{\r\n            //   display: ([\"cc\", \"both\"].indexOf(displayMode) > -1 ? \"\" : \"none\")\r\n            // }}\r\n          >\r\n            { [\"cc\", \"bh\"].indexOf(displayMode) > -1 && \r\n            <Explorer\r\n              method={method}\r\n              dataset={dataset}\r\n              isLabel={isLabel}\r\n              showMissing={showMissing}\r\n              showFalse={showFalse}\r\n              radius={radius}\r\n              stroke={stroke}\r\n              width={width}\r\n              height={height}\r\n            />\r\n            }\r\n          </div>\r\n          <div id=\"cv\">\r\n            { [\"cv\", \"bh\"].indexOf(displayMode) > -1 && \r\n            <Checkviz\r\n              method={method}\r\n              dataset={dataset}\r\n              isLabel={isLabel}\r\n              radius={radius}\r\n              width={width}\r\n              height={height}\r\n            />\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}