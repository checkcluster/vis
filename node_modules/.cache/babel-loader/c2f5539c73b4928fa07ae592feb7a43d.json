{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ytaek.kim/dev/snc_vis/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport Checkviz from './components/Checkviz';\nimport Explorer from './components/Explorer';\nimport Select from '@material-ui/core/Select';\n\nconst App = props => {\n  _s();\n\n  // defaults\n  let datasetList = [\"mnist_sampled_2\", \"fmnist_sampled_2\", \"kmnist_sampled_2\"];\n  let methodList = [\"tsne\", \"umap\", \"pca\", \"isomap\"]; // let method = \"tsne\";\n  // let dataset = \"mnist_sampled_2\";\n\n  let isLabel = true;\n  let showMissing = true;\n  let showFalse = true;\n  let radius = 2;\n  let stroke = 5;\n  const [method, setMethod] = useState(\"tsne\");\n  const [dataset, setDataset] = useState(\"mnist_sampled_2\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"App-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"App-title\",\n        children: \"CheckCluster - Explaining the Cluster Reliability of Multidimensional Projections\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-sidebar\",\n        children: [\"Select dataset\", /*#__PURE__*/_jsxDEV(Select, {\n          id: \"datasetSelection\",\n          value: dataset,\n          onChange: event => setDataset(event.target.value),\n          style: {\n            width: \"90px\",\n            fontSize: \"12px\"\n          },\n          native: true,\n          children: datasetList.map((d, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: d,\n            children: d\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), \"Select method\", /*#__PURE__*/_jsxDEV(Select, {\n          id: \"datasetSelection\",\n          value: method,\n          onChange: event => setDataset(event.target.value),\n          style: {\n            width: \"90px\",\n            fontSize: \"12px\"\n          },\n          native: true,\n          children: datasetList.map((d, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: d,\n            children: d\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-main\",\n        children: /*#__PURE__*/_jsxDEV(Explorer, {\n          method: method,\n          dataset: dataset,\n          isLabel: true,\n          showMissing: true,\n          showFalse: true,\n          radius: 2,\n          stroke: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"uwR0EkPgOq7i4Mw895lYRZeuV2U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ytaek.kim/dev/snc_vis/src/App.js"],"names":["React","useState","Checkviz","Explorer","Select","App","props","datasetList","methodList","isLabel","showMissing","showFalse","radius","stroke","method","setMethod","dataset","setDataset","event","target","value","width","fontSize","map","d","i"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport React, { useState } from 'react';\r\n\r\nimport Checkviz from './components/Checkviz';\r\nimport Explorer from './components/Explorer';\r\n\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst App = (props) => {\r\n  // defaults\r\n  let datasetList = [\r\n    \"mnist_sampled_2\",\r\n    \"fmnist_sampled_2\",\r\n    \"kmnist_sampled_2\"\r\n  ];\r\n\r\n  let methodList = [\r\n    \"tsne\",\r\n    \"umap\",\r\n    \"pca\",\r\n    \"isomap\",\r\n  ];\r\n\r\n  // let method = \"tsne\";\r\n  // let dataset = \"mnist_sampled_2\";\r\n  let isLabel = true;\r\n  let showMissing = true;\r\n  let showFalse = true;\r\n  let radius = 2;\r\n  let stroke = 5;\r\n\r\n  const [method, setMethod] = useState(\"tsne\");\r\n  const [dataset, setDataset] = useState(\"mnist_sampled_2\");\r\n\r\n  return (\r\n    <div id=\"App-wrapper\">\r\n      <div id=\"App-header\">\r\n        <div id=\"App-title\">CheckCluster - Explaining the Cluster Reliability of Multidimensional Projections</div>\r\n      </div>\r\n      <div className=\"App-container\">\r\n        <div className=\"App-sidebar\">\r\n          Select dataset\r\n          <Select\r\n            id={\"datasetSelection\"}\r\n            value={dataset}\r\n            onChange={(event) => setDataset(event.target.value)}\r\n            style={{ width: \"90px\", fontSize: \"12px\" }}\r\n            native\r\n          >\r\n            {datasetList.map((d, i) => (\r\n              <option key={i} value={d} >\r\n                {d}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n          Select method\r\n          <Select\r\n            id={\"datasetSelection\"}\r\n            value={method}\r\n            onChange={(event) => setDataset(event.target.value)}\r\n            style={{ width: \"90px\", fontSize: \"12px\" }}\r\n            native\r\n          >\r\n            {datasetList.map((d, i) => (\r\n              <option key={i} value={d} >\r\n                {d}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </div>\r\n        <div className=\"App-main\">\r\n          {/* <Checkviz\r\n            method=\"tsne\"\r\n            dataset=\"mnist_sampled_50\"\r\n            isLabel={true}\r\n            radius={5}\r\n          /> */}\r\n          <Explorer\r\n            method={method}\r\n            dataset={dataset}\r\n            isLabel={true}\r\n            showMissing={true}\r\n            showFalse={true}\r\n            radius={2}\r\n            stroke={5}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}