{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ytaek.kim/dev/snc_vis/src/components/Checkviz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { precisionPrefix } from 'd3';\nimport inside from 'point-in-polygon';\nimport { Delaunay } from \"d3-delaunay\";\n\nconst Checkviz = props => {\n  _s();\n\n  let jsonFileName = props.dataset + \"_\" + props.method;\n\n  let pointsData = require(\"../json/\" + jsonFileName + \"_points.json\");\n\n  let pointsArray;\n  pointsData = pointsData.map((d, i) => {\n    return {\n      coor: d.coor,\n      label: d.label,\n      idx: i,\n      cont: d.cont,\n      trust: d.trust\n    };\n  });\n  const width = props.width;\n  const height = props.height;\n  const margin = {\n    hor: width / 20,\n    ver: height / 20\n  };\n  const [minX, maxX] = d3.extent(pointsData, d => d.coor[0]);\n  const [minY, maxY] = d3.extent(pointsData, d => d.coor[1]);\n  const xScale = d3.scaleLinear().domain([minX, maxX]).range([0, width]);\n  const yScale = d3.scaleLinear().domain([minY, maxY]).range([0, height]);\n  let svgs, svg, svgVoronoi, svgPoints;\n  const radius = props.radius;\n  let colorScale = d3.scaleOrdinal(d3.schemeCategory10);\n  useEffect(() => {\n    svgs = d3.select(\"#scatterplot\" + props.dataset + props.method).attr(\"width\", width + margin.hor * 2).attr(\"height\", height + margin.ver * 2);\n    svg = svgs.append(\"g\").attr(\"id\", \"scatterplot_g\" + props.dataset + props.method).attr(\"transform\", \"translate(\" + margin.hor + \", \" + margin.ver + \")\");\n    svgVoronoi = svg.append(\"g\").attr(\"id\", \"voronoi_g\" + props.dataset + props.method);\n    console.log(pointsData);\n    pointsArray = pointsData.map((d, i) => [xScale(d.coor[0]), yScale(d.coor[1])]);\n    console.log(pointsArray);\n    const delaunay = Delaunay.from(pointsArray);\n    const voronoi = delaunay.voronoi([0, 0, 1000, 1000]);\n    console.log(voronoi.cellPolygon(2));\n    const voronoiCells = pointsArray.map((_, i) => voronoi.cellPolygon(i));\n\n    function scaleBivariate(first, second) {\n      let cScale = 1.3;\n      let powScale = d3.scalePow().exponent(1.5145);\n      let lScale1 = d3.scaleLinear().domain([0, 2]).range([-20, 100]);\n      let lScale2 = d3.scaleLinear().domain([1, 2]).range([35, 0]);\n      let aScale = d3.scaleLinear().domain([1, -1]).range([30 * cScale, -30 * cScale]); //30\n\n      let bScale = d3.scaleLinear().domain([1, -1]).range([20 * cScale, -20 * cScale]); // 20   \n\n      let lScale;\n      return d3.color(d3.lab(powScale(1 - (first + second) / 2) * 100, aScale(first - second), bScale(second - first)));\n    }\n\n    svgVoronoi.selectAll(\"path\").data(voronoiCells).enter().append(\"path\").attr(\"fill\", (d, i) => {\n      return scaleBivariate(1 - pointsData[i].trust, 1 - pointsData[i].cont);\n    }).attr(\"stroke\", 0).attr(\"d\", d => {\n      return d3.line().x(datum => datum[0]).y(datum => datum[1])(d);\n    });\n    svg.append(\"rect\").attr(\"width\", width + margin.hor * 2).attr(\"height\", height + margin.ver * 2).attr(\"transform\", \"translate(-\" + margin.hor + \", -\" + margin.ver + \")\").style(\"fill-opacity\", 0).style(\"stroke\", \"black\").style(\"stroke-width\", 2);\n    svgPoints = svg.append(\"g\").attr(\"id\", \"circle_g\" + props.dataset + props.method); // points\n\n    svgPoints.selectAll(\"circle\").data(pointsData).join(enter => {\n      enter.append(\"circle\").attr(\"class\", (d, i) => \"circle\" + i.toString()).attr(\"fill\", d => {\n        if (props.isLabel) return colorScale(d.label);else return \"black\";\n      }).attr(\"cx\", d => xScale(d.coor[0])).attr(\"cy\", d => yScale(d.coor[1])).style(\"opacity\", 0.8).attr(\"r\", radius);\n    }); // edges\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"scatterplot\" + props.dataset + props.method\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Checkviz, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Checkviz;\nexport default Checkviz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkviz\");","map":{"version":3,"sources":["/Users/ytaek.kim/dev/snc_vis/src/components/Checkviz.js"],"names":["React","useEffect","useRef","d3","precisionPrefix","inside","Delaunay","Checkviz","props","jsonFileName","dataset","method","pointsData","require","pointsArray","map","d","i","coor","label","idx","cont","trust","width","height","margin","hor","ver","minX","maxX","extent","minY","maxY","xScale","scaleLinear","domain","range","yScale","svgs","svg","svgVoronoi","svgPoints","radius","colorScale","scaleOrdinal","schemeCategory10","select","attr","append","console","log","delaunay","from","voronoi","cellPolygon","voronoiCells","_","scaleBivariate","first","second","cScale","powScale","scalePow","exponent","lScale1","lScale2","aScale","bScale","lScale","color","lab","selectAll","data","enter","line","x","datum","y","style","join","toString","isLabel"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { precisionPrefix } from 'd3';\r\nimport inside from 'point-in-polygon';\r\nimport {Delaunay} from \"d3-delaunay\";\r\n\r\nconst Checkviz = (props) => {\r\n\r\n\r\n    let jsonFileName = props.dataset + \"_\" + props.method;\r\n    let pointsData = require(\"../json/\" + jsonFileName + \"_points.json\");\r\n    let pointsArray;\r\n\r\n\r\n\r\n    pointsData = pointsData.map((d, i) => {\r\n        return {\r\n            coor: d.coor,\r\n            label: d.label,\r\n            idx: i,\r\n            cont: d.cont,\r\n            trust: d.trust\r\n        };\r\n    });\r\n    \r\n\r\n    \r\n\r\n\r\n    const width = props.width;\r\n    const height = props.height;\r\n    const margin = { hor: width / 20, ver: height / 20 };\r\n\r\n    const [minX, maxX] = d3.extent(pointsData, d => d.coor[0]);\r\n    const [minY, maxY] = d3.extent(pointsData, d => d.coor[1]);\r\n\r\n    const xScale = d3.scaleLinear()\r\n                        .domain([minX, maxX])\r\n                        .range([0, width]);\r\n    \r\n    const yScale = d3.scaleLinear()\r\n                        .domain([minY, maxY])\r\n                        .range([0, height]);\r\n\r\n\r\n    let svgs, svg, svgVoronoi, svgPoints;\r\n\r\n    const radius = props.radius;\r\n\r\n\r\n    let colorScale = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        svgs = d3.select(\"#scatterplot\" + props.dataset + props.method)\r\n                .attr(\"width\", width + margin.hor * 2)\r\n                .attr(\"height\", height + margin.ver * 2)\r\n     \r\n        \r\n        svg = svgs.append(\"g\")\r\n                  .attr(\"id\", \"scatterplot_g\" + props.dataset + props.method)\r\n                  .attr(\"transform\", \"translate(\" + margin.hor + \", \" + margin.ver + \")\");\r\n        \r\n\r\n        svgVoronoi = svg.append(\"g\")\r\n                        .attr(\"id\", \"voronoi_g\" + props.dataset + props.method);\r\n\r\n        console.log(pointsData)\r\n\r\n\r\n        pointsArray = pointsData.map((d, i) => [xScale(d.coor[0]), yScale(d.coor[1])])\r\n        console.log(pointsArray)\r\n        const delaunay = Delaunay.from(pointsArray);\r\n        const voronoi = delaunay.voronoi([0, 0, 1000, 1000]);\r\n\r\n        console.log(voronoi.cellPolygon(2));\r\n\r\n        const voronoiCells = pointsArray.map((_, i) => voronoi.cellPolygon(i));\r\n\r\n        function scaleBivariate(first, second) {\r\n\r\n            let cScale = 1.3\r\n            \r\n            let powScale = d3.scalePow().exponent(1.5145);\r\n            let lScale1 = d3.scaleLinear().domain([0, 2]).range([-20, 100])\r\n            let lScale2 = d3.scaleLinear().domain([1, 2]).range([35, 0])\r\n            let aScale = d3.scaleLinear().domain([1, -1]).range([30 * cScale, -30 * cScale])  //30\r\n            let bScale = d3.scaleLinear().domain([1, -1]).range([20 * cScale, -20 * cScale])  // 20   \r\n            let lScale;\r\n\r\n\r\n            return d3.color(d3.lab(powScale(1 - (first + second) / 2) * 100, aScale(first - second), bScale(second - first)))\r\n        }\r\n        \r\n        svgVoronoi.selectAll(\"path\")\r\n                  .data(voronoiCells)\r\n                  .enter()\r\n                  .append(\"path\")\r\n                  .attr(\"fill\", (d, i) => {\r\n                      return scaleBivariate(1 - pointsData[i].trust, 1 - pointsData[i].cont)\r\n                  })\r\n                  .attr(\"stroke\",0)\r\n                  .attr(\"d\", d => {\r\n                      return d3.line()\r\n                               .x(datum => datum[0])\r\n                               .y(datum => datum[1])\r\n                               (d);\r\n                  })\r\n\r\n\r\n\r\n        svg.append(\"rect\")\r\n           .attr(\"width\", width + margin.hor * 2)\r\n           .attr(\"height\", height  + margin.ver * 2)\r\n           .attr(\"transform\", \"translate(-\" + margin.hor + \", -\" + margin.ver + \")\")\r\n           .style(\"fill-opacity\", 0)\r\n           .style(\"stroke\", \"black\")\r\n           .style(\"stroke-width\", 2)\r\n                         \r\n \r\n        \r\n\r\n        svgPoints = svg.append(\"g\")\r\n                    .attr(\"id\", \"circle_g\" + props.dataset + props.method);\r\n        \r\n        \r\n\r\n        // points\r\n        svgPoints.selectAll(\"circle\")\r\n                         .data(pointsData)\r\n                         .join(\r\n                             enter => {\r\n                                 enter.append(\"circle\")\r\n                                     .attr(\"class\", (d,i) => \"circle\" + i.toString())\r\n                                     .attr(\"fill\", d => {\r\n                                         if (props.isLabel) return colorScale(d.label);\r\n                                         else return \"black\"; \r\n                                     })\r\n                                     .attr(\"cx\", d => xScale(d.coor[0]))\r\n                                     .attr(\"cy\", d => yScale(d.coor[1]))\r\n                                     .style(\"opacity\", 0.8)\r\n                                     .attr(\"r\", radius);\r\n                         });\r\n        \r\n        // edges\r\n\r\n        \r\n\r\n    }, []);\r\n   \r\n\r\n\r\n    return (\r\n        <div>\r\n            <svg id={\"scatterplot\" + props.dataset + props.method}></svg>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkviz;"]},"metadata":{},"sourceType":"module"}